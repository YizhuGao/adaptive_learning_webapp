# Generated by Django 5.1.5 on 2025-02-23 03:38

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('assessment_id', models.AutoField(primary_key=True, serialize=False)),
                ('date_taken', models.DateTimeField(auto_now_add=True)),
                ('score', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('level', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('question_id', models.AutoField(primary_key=True, serialize=False)),
                ('question_text', models.TextField()),
                ('assigned_at', models.IntegerField(choices=[(0, 'Before Assignment'), (1, 'After Assignment')], default=0)),
                ('difficulty_level', models.CharField(choices=[('Beginner', 'Beginner'), ('Intermediate', 'Intermediate'), ('Advanced', 'Advanced')], max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='Race',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('race_type', models.CharField(choices=[('white', 'White'), ('hispanic', 'Hispanic, Latino, or Spanish origin'), ('black', 'Black or African American'), ('asian', 'Asian'), ('american_indian', 'American Indian or Alaska Native'), ('middle_eastern', 'Middle Eastern or North African'), ('native_hawaiian', 'Native Hawaiian or Other Pacific Islander'), ('other_race', 'Some other race, ethnicity, or origin'), ('prefer_not_to_answer', 'Prefer not to answer')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Subtopic',
            fields=[
                ('subtopic_id', models.AutoField(primary_key=True, serialize=False)),
                ('subtopic_name', models.CharField(max_length=255)),
                ('subtopic_order_number', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('topic_id', models.AutoField(primary_key=True, serialize=False)),
                ('topic_name', models.CharField(max_length=30)),
                ('topic_order', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Option',
            fields=[
                ('option_id', models.AutoField(primary_key=True, serialize=False)),
                ('option_text', models.CharField(max_length=255)),
                ('is_correct', models.BooleanField(default=False)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='my_app.question')),
            ],
        ),
        migrations.CreateModel(
            name='AssessmentResponse',
            fields=[
                ('response_id', models.AutoField(primary_key=True, serialize=False)),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_app.assessment')),
                ('selected_option', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='my_app.option')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_app.question')),
            ],
        ),
        migrations.AddField(
            model_name='assessment',
            name='questions',
            field=models.ManyToManyField(to='my_app.question'),
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('student_id', models.AutoField(primary_key=True, serialize=False)),
                ('uga_id', models.CharField(blank=True, max_length=20, null=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('class_level', models.CharField(choices=[('5th Grade', '5th Grade'), ('6th Grade', '6th Grade'), ('7th Grade', '7th Grade'), ('8th Grade', '8th Grade'), ('9th Grade', '9th Grade'), ('10th Grade', '10th Grade'), ('11th Grade', '11th Grade'), ('12th Grade', '12th Grade'), ('College Undergraduate', 'College Undergraduate'), ('Other', 'Other')], max_length=50)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('gender', models.CharField(blank=True, choices=[('female', 'Female'), ('male', 'Male'), ('non_binary', 'Non Binary'), ('prefer_not_to_answer', 'Prefer Not to Answer')], max_length=20, null=True)),
                ('is_english_first_language', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, null=True)),
                ('science_experience', models.CharField(blank=True, choices=[('A_grades', "Science is one of my best subjects and I usually make A's in that class."), ('ok_grades', 'Science is OK, my grades are alright, but it is not my favorite subject.'), ('find_difficult', 'I find science very difficult, I do the best I can, but would like to earn better grades than I do.')], max_length=100, null=True)),
                ('race', models.ManyToManyField(blank=True, to='my_app.race')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Recommendation',
            fields=[
                ('recommendation_id', models.AutoField(primary_key=True, serialize=False)),
                ('recommendation_date', models.DateTimeField(auto_now_add=True)),
                ('confidence_score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_app.student')),
            ],
        ),
        migrations.AddField(
            model_name='assessment',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_app.student'),
        ),
        migrations.AddField(
            model_name='question',
            name='subtopic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='my_app.subtopic'),
        ),
        migrations.AddField(
            model_name='subtopic',
            name='topic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subtopics', to='my_app.topic'),
        ),
        migrations.AddField(
            model_name='question',
            name='topic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='my_app.topic'),
        ),
        migrations.AddField(
            model_name='assessment',
            name='topic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessments', to='my_app.topic'),
        ),
        migrations.CreateModel(
            name='VideoModule',
            fields=[
                ('video_module_id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('url', models.URLField()),
                ('description', models.TextField()),
                ('level', models.CharField(max_length=15)),
                ('students', models.ManyToManyField(through='my_app.Recommendation', to='my_app.student')),
                ('subtopic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='video_modules', to='my_app.subtopic')),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='video_modules', to='my_app.topic')),
            ],
        ),
        migrations.AddField(
            model_name='recommendation',
            name='module',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_app.videomodule'),
        ),
        migrations.CreateModel(
            name='Progress',
            fields=[
                ('progress_id', models.AutoField(primary_key=True, serialize=False)),
                ('completion_status', models.CharField(choices=[('Not Started', 'Not Started'), ('In Progress', 'In Progress'), ('Completed', 'Completed')], max_length=15)),
                ('current_topic', models.TextField(null=True)),
                ('next_topic', models.TextField(null=True)),
                ('last_accessed', models.DateTimeField(auto_now=True)),
                ('score_before', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('score_after', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_app.student')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_app.videomodule')),
            ],
        ),
    ]
